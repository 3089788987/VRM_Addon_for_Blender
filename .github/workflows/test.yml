name: Test

on: [push, pull_request]

jobs:
  test-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        archive_url:
          - https://ftp.nluug.nl/pub/graphics/blender/release/Blender2.82/blender-2.82-windows64.zip
          - https://ftp.nluug.nl/pub/graphics/blender/release/Blender2.83/blender-2.83.0-windows64.zip
          - https://builder.blender.org/download/blender-2.90.0-a7f1c68938f9-windows64.zip
    steps:
      - uses: actions/checkout@v2
      - name: Cache archive
        id: cache-archive
        uses: actions/cache@v2
        with:
          path: blender.zip
          key: ${{ matrix.archive_url }}-archive-3
      - name: Download archive
        if: steps.cache-archive.outputs.cache-hit != 'true'
        run: Invoke-WebRequest -Uri "${{ matrix.archive_url }}" -OutFile blender.zip
      - name: Test
        run: |
          $expansion_name = "${{ matrix.archive_url }}".Split("/") | Select-Object -Last 1 | Split-Path -LeafBase
          $major_minor = $expansion_name.Split("-")[1].Split(".")[0..1] -join "."

          Expand-Archive -LiteralPath blender.zip -DestinationPath "$env:TEMP"
          &"$env:TEMP\$expansion_name\$major_minor\python\bin\python.exe" `
            test\run.py `
            "$env:TEMP\$expansion_name\blender.exe"

  test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        archive_url:
          - https://ftp.nluug.nl/pub/graphics/blender/release/Blender2.82/blender-2.82-macOS.dmg
          - https://ftp.nluug.nl/pub/graphics/blender/release/Blender2.83/blender-2.83.0-macOS.dmg
          - https://builder.blender.org/download/blender-2.90.0-a7f1c68938f9-macOS.dmg
    steps:
      - uses: actions/checkout@v2
      - name: Cache archive
        id: cache-archive
        uses: actions/cache@v2
        with:
          path: blender.dmg
          key: ${{ matrix.archive_url }}-archive-3
      - name: Download archive
        if: steps.cache-archive.outputs.cache-hit != 'true'
        run: curl -fsLS "${{ matrix.archive_url }}" -o blender.dmg
      - name: Test
        run: |
          hdiutil attach blender.dmg
          cp -fr /Volumes/Blender/Blender.app /Applications
          hdiutil detach $(mount -t hfs | grep '/Volumes/Blender' | awk '{print $1}')
          major_minor=$(ruby -e "puts ARGV[0].split('/').last.split('-')[1].split('.')[0, 2].join('.')" "${{ matrix.archive_url }}")
          python=$(find /Applications/Blender.app/Contents/Resources/$major_minor/python/bin -name "python*" -type f -perm -u+x | sort | head -n 1)
          $python ./test/run.py /Applications/Blender.app/Contents/MacOS/Blender
  lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install deb packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y nkf python3-pip
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: Check character encoding
        run: |
          find . -name '*.py' -exec nkf -w -Lu -Z1 --in-place {} +
          find . -name '*.md' -exec nkf -w -Lu -Z1 --in-place {} +
          git diff --exit-code
      - name: Install pip packages
        run: |
          pip3 install --upgrade pip
          pip3 install flake8 pep8-naming
          echo "::add-path::$HOME/.local/bin"
      - name: Lint
        run: flake8 . --count --show-source --statistics --verbose
